#
# Copyright (C) 2019-2021 VMware, Inc. All Rights Reserved.
#
# Licensed under the GNU General Public License v2 (the "License");
# you may not use this file except in compliance with the License. The terms
# of the License are located in the COPYING file of this distribution.
#
# tdnf spec file
#

%define dist @DIST@

Summary:        dnf/yum equivalent using C libs
Name:           @PROJECT_NAME@
Version:        @PROJECT_VERSION@
Release:        1%{?dist}
Vendor:         VMware, Inc.
Distribution:   Photon
License:        LGPLv2.1,GPLv2
URL:            https://github.com/vmware/tdnf
Group:          Applications/RPM

Requires:       rpm-libs >= 4.16.1.3-5
Requires:       curl-libs
Requires:       tdnf-cli-libs = %{version}-%{release}
Requires:       libsolv >= 0.7.19

BuildRequires:  popt-devel
BuildRequires:  rpm-devel >= 4.16.1.3-5
BuildRequires:  openssl-devel >= 1.1.1
BuildRequires:  libsolv-devel >= 0.7.19
BuildRequires:  curl-devel
BuildRequires:  systemd
#plugin repogpgcheck
BuildRequires:  gpgme-devel
BuildRequires:  cmake
BuildRequires:  python3-devel

%if 0%{?with_check:1}
BuildRequires:  createrepo_c
BuildRequires:  glib
BuildRequires:  libxml2
BuildRequires:  python3-pip
BuildRequires:  photon-release
BuildRequires:  photon-repos
BuildRequires:  python3-requests
BuildRequires:  python3-urllib3
BuildRequires:  python3-pyOpenSSL
BuildRequires:  python3-pytest
%endif

Obsoletes:      yum
Provides:       yum

%description
tdnf is a yum/dnf equivalent which uses libsolv and libcurl

%define _tdnfpluginsdir %{_libdir}/tdnf-plugins

%package    devel
Summary:    A Library providing C API for tdnf
Group:      Development/Libraries
Requires:   tdnf = %{version}-%{release}
Requires:   libsolv-devel

%description devel
Development files for tdnf

%package	cli-libs
Summary:	Library providing cli libs for tdnf like clients
Group:		Development/Libraries

%description cli-libs
Library providing cli libs for tdnf like clients.

%package    plugin-repogpgcheck
Summary:    tdnf plugin providign gpg verification for repository metadata
Group:      Development/Libraries
Requires:   gpgme

%description plugin-repogpgcheck
tdnf plugin providign gpg verification for repository metadata

%package    python
Summary:    python bindings for tdnf
Group:      Development/Libraries
Requires:   python3

%description python
python bindings for tdnf

%package automatic
Summary:   %{name} - automated upgrades
Group:     Development/Libraries
Requires:  %{name} = %{version}-%{release}
%{?systemd_requires}

%description automatic
Systemd units that can periodically download package upgrades and apply them.

%prep
%autosetup -p1 -n %{name}-%{version}

%build
mkdir build && cd build
cmake \
  -DCMAKE_BUILD_TYPE=Debug \
  -DCMAKE_INSTALL_PREFIX=%{_prefix} \
  -DCMAKE_INSTALL_LIBDIR:PATH=lib \
  -DSYSTEMD_DIR=%{_unitdir} \
  ..

make %{?_smp_mflags} && make python %{?_smp_mflags}

%check
%if 0%{?with_check:1}
cd build && make %{?_smp_mflags} check
%endif

%install
cd build && make DESTDIR=%{buildroot} install %{?_smp_mflags}
find %{buildroot} -name '*.a' -delete
mkdir -p %{buildroot}/var/cache/tdnf %{buildroot}%{_unitdir}
ln -sf %{_bindir}/tdnf %{buildroot}%{_bindir}/tyum
ln -sf %{_bindir}/tdnf %{buildroot}%{_bindir}/yum
mv %{buildroot}%{_libdir}/pkgconfig/tdnfcli.pc %{buildroot}%{_libdir}/pkgconfig/tdnf-cli-libs.pc
mkdir -p %{buildroot}%{_tdnfpluginsdir}/tdnfrepogpgcheck
mv %{buildroot}%{_tdnfpluginsdir}/libtdnfrepogpgcheck.so %{buildroot}%{_tdnfpluginsdir}/tdnfrepogpgcheck/

pushd python
python3 setup.py install --skip-build --prefix=%{_prefix} --root=%{buildroot}
popd
find %{buildroot} -name '*.pyc' -delete

%pre

%post
/sbin/ldconfig
%triggerin -- motd
[ $2 -eq 1 ] || exit 0
if [ $1 -eq 1 ]; then
  echo "detected install of tdnf/motd, enabling tdnf-cache-updateinfo.timer" >&2
  systemctl enable tdnf-cache-updateinfo.timer >/dev/null 2>&1 || :
  systemctl start tdnf-cache-updateinfo.timer >/dev/null 2>&1 || :
elif [ $1 -eq 2 ]; then
  echo "detected upgrade of tdnf, daemon-reload" >&2
  systemctl daemon-reload >/dev/null 2>&1 || :
fi

%preun
%triggerun -- motd
[ $1 -eq 1 ] && [ $2 -eq 1 ] && exit 0
echo "detected uninstall of tdnf/motd, disabling tdnf-cache-updateinfo.timer" >&2
systemctl --no-reload disable tdnf-cache-updateinfo.timer >/dev/null 2>&1 || :
systemctl stop tdnf-cache-updateinfo.timer >/dev/null 2>&1 || :
rm -f /var/cache/tdnf/cached-updateinfo.txt

%postun
/sbin/ldconfig
%triggerpostun -- motd
[ $1 -eq 1 ] && [ $2 -eq 1 ] || exit 0
echo "detected upgrade of tdnf/motd, restarting tdnf-cache-updateinfo.timer" >&2
systemctl try-restart tdnf-cache-updateinfo.timer >/dev/null 2>&1 || :

%post cli-libs
/sbin/ldconfig

%postun cli-libs
/sbin/ldconfig

%global automatic_services tdnf-automatic.timer tdnf-automatic-notifyonly.timer tdnf-automatic-install.timer

%post automatic
%systemd_post %{automatic_services}

%preun automatic
%systemd_preun %{automatic_services}

%postun automatic
%systemd_postun_with_restart %{automatic_services}

%files
%defattr(-,root,root,0755)
%{_bindir}/tdnf
%{_bindir}/tyum
%{_bindir}/yum
%{_bindir}/tdnf-cache-updateinfo
%{_libdir}/libtdnf.so.*
%config(noreplace) %{_sysconfdir}/tdnf/tdnf.conf
%config %{_unitdir}/tdnf-cache-updateinfo.service
%config(noreplace) %{_unitdir}/tdnf-cache-updateinfo.timer
%config %{_sysconfdir}/motdgen.d/02-tdnf-updateinfo.sh
%dir /var/cache/tdnf
%{_datadir}/bash-completion/completions/tdnf

%files devel
%defattr(-,root,root)
%{_includedir}/tdnf/*.h
%{_libdir}/libtdnf.so
%{_libdir}/libtdnfcli.so
%exclude %{_libdir}/debug
%{_libdir}/pkgconfig/tdnf.pc
%{_libdir}/pkgconfig/tdnf-cli-libs.pc

%files cli-libs
%defattr(-,root,root)
%{_libdir}/libtdnfcli.so.*

%files plugin-repogpgcheck
%defattr(-,root,root)
%dir %{_sysconfdir}/tdnf/pluginconf.d
%config(noreplace) %{_sysconfdir}/tdnf/pluginconf.d/tdnfrepogpgcheck.conf
%{_tdnfpluginsdir}/tdnfrepogpgcheck/libtdnfrepogpgcheck.so

%files python
%defattr(-,root,root)
%{python3_sitelib}/*

%files automatic
%defattr(-,root,root,0755)
%{_bindir}/%{name}-automatic
%config(noreplace) %{_sysconfdir}/%{name}/automatic.conf
%{_unitdir}/%{name}-automatic.timer
%{_unitdir}/%{name}-automatic.service
%{_unitdir}/%{name}-automatic-install.timer
%{_unitdir}/%{name}-automatic-install.service
%{_unitdir}/%{name}-automatic-notifyonly.timer
%{_unitdir}/%{name}-automatic-notifyonly.service

%changelog
